/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControlleVendasProdutosVenda;
import Controller.ControllerProduto;
import controller.ControllerVenda;
import Controller.ControllerVendaCliente;
import Controller.ControllerVendasProdutos;
import Model.ModelProdutos;
import Model.ModelVendasProdutos;
import Model.ModelVendasProdutosVenda;
import model.ModelVendasCliente;
import controller.ControllerCliente;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelVenda;
import util.BLDatas;

/**
 *
 * @author Marcio Araujo
 */
public class ViewVenda extends javax.swing.JFrame {
    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente>listaModelClientes = new ArrayList<>();
    ControllerProduto controllerProdutos = new ControllerProduto();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ControllerVendaCliente controllerVendaCliente = new ControllerVendaCliente();
    ControllerVenda controllerVenda = new ControllerVenda();
    ModelVenda modelVenda = new ModelVenda();
    BLDatas blDatas = new BLDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaVendasProdutoses = new ArrayList<>();
    ControlleVendasProdutosVenda controllerProdutosVendasProdutos = new ControlleVendasProdutosVenda();
    ModelVendasProdutosVenda modelVendasProdutosVenda = new ModelVendasProdutosVenda();
    ArrayList<ModelVendasProdutosVenda> listaModelVendasProdutosVendas = new ArrayList<>();
    String alterarSalvar;
    /**
     * Creates new form ViewVenda
     */
    public ViewVenda() {

        initComponents();
        setLocationRelativeTo(null);
        listarClientes();
        listaProdutos();
        carregarVendas();
        preencherClienteComobox();
        prencherProdutoComobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnCadastro = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        cbCliente = new componentes.UJComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtNumVendas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodProduto = new javax.swing.JTextField();
        cbProduto = new componentes.UJComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutosVendas = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        txtValorTotal = new javax.swing.JTextField();
        txtDesconto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");
        setResizable(false);

        jLabel1.setText("Cod: Cliente");

        txtCodCliente.setEnabled(false);
        txtCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodClienteFocusLost(evt);
            }
        });

        cbCliente.setAutocompletar(true);
        cbCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setText("Nome: Cliente");

        jLabel3.setText("Num: Venda");

        jLabel4.setText("Cod: Produto");

        txtCodProduto.setEnabled(false);
        txtCodProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodProdutoFocusLost(evt);
            }
        });

        cbProduto.setAutocompletar(true);
        cbProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel5.setText("Quantidade");

        btnAdicionar.setText("Adicionar produtos");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        tblProdutosVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Produto", "Nome Produto", "Quantdade", "Valor unidario", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProdutosVendas);
        if (tblProdutosVendas.getColumnModel().getColumnCount() > 0) {
            tblProdutosVendas.getColumnModel().getColumn(0).setMinWidth(90);
            tblProdutosVendas.getColumnModel().getColumn(0).setPreferredWidth(90);
            tblProdutosVendas.getColumnModel().getColumn(0).setMaxWidth(90);
            tblProdutosVendas.getColumnModel().getColumn(2).setMinWidth(100);
            tblProdutosVendas.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblProdutosVendas.getColumnModel().getColumn(2).setMaxWidth(100);
            tblProdutosVendas.getColumnModel().getColumn(3).setMinWidth(100);
            tblProdutosVendas.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblProdutosVendas.getColumnModel().getColumn(3).setMaxWidth(100);
            tblProdutosVendas.getColumnModel().getColumn(4).setMinWidth(90);
            tblProdutosVendas.getColumnModel().getColumn(4).setPreferredWidth(90);
            tblProdutosVendas.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        btnCancelar.setText("Cancelar");

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoFocusLost(evt);
            }
        });

        jLabel6.setText("Desconto");

        jLabel7.setText("Valor Total");

        jLabel9.setText("Nome: Produto");

        btnRemover.setText("Remover produtos");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodCliente)
                                .addGap(9, 9, 9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtNumVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(cbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                        .addComponent(btnAdicionar))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(4, 4, 4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(btnRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        pnCadastro.addTab("Cadastro", jPanel1);

        jLabel8.setText("Pesquisa:");

        btnPesquisa.setText("Pesquisar");
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Produto", "Nome Cliente", "Valor Bruto", "Desconto", "total", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblVendas);
        if (tblVendas.getColumnModel().getColumnCount() > 0) {
            tblVendas.getColumnModel().getColumn(0).setMinWidth(60);
            tblVendas.getColumnModel().getColumn(0).setPreferredWidth(60);
            tblVendas.getColumnModel().getColumn(0).setMaxWidth(60);
            tblVendas.getColumnModel().getColumn(2).setMinWidth(70);
            tblVendas.getColumnModel().getColumn(2).setPreferredWidth(70);
            tblVendas.getColumnModel().getColumn(2).setMaxWidth(70);
            tblVendas.getColumnModel().getColumn(3).setMinWidth(70);
            tblVendas.getColumnModel().getColumn(3).setPreferredWidth(70);
            tblVendas.getColumnModel().getColumn(3).setMaxWidth(70);
            tblVendas.getColumnModel().getColumn(4).setMinWidth(70);
            tblVendas.getColumnModel().getColumn(4).setPreferredWidth(70);
            tblVendas.getColumnModel().getColumn(4).setMaxWidth(70);
            tblVendas.getColumnModel().getColumn(5).setMinWidth(80);
            tblVendas.getColumnModel().getColumn(5).setPreferredWidth(80);
            tblVendas.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisa)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterar)
                    .addComponent(btnExcluir))
                .addContainerGap(160, Short.MAX_VALUE))
        );

        pnCadastro.addTab("Consultar/Excluir/Alterar", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnCadastro)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(txtCodCliente.getText()));
        cbCliente.setSelectedItem(modelCliente.getCliNome());
        
        
    }//GEN-LAST:event_txtCodClienteFocusLost

    private void cbClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if(cbCliente.isPopupVisible()){

            preencherClienteComobox();
        }
    }//GEN-LAST:event_cbClientePopupMenuWillBecomeInvisible

    private void cbProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if(cbProduto.isVisible()){
          
         prencherProdutoComobox();
        }
       
    }//GEN-LAST:event_cbProdutoPopupMenuWillBecomeInvisible

    private void txtCodProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodProdutoFocusLost
        // TODO add your handling code here:
        modelProdutos =controllerProdutos.retornarProdutoController(Integer.parseInt(txtCodProduto.getText()));
        cbProduto.setSelectedItem(modelProdutos.getProNome());
    }//GEN-LAST:event_txtCodProdutoFocusLost

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        int linha = tblVendas.getSelectedRow();
        int codigoVenda = (int) tblVendas.getValueAt(linha, 0);
        listaModelProdutos = new ArrayList<>();
        listaModelVendasProdutosVendas = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        for (int i = 0; i < listaModelVendasProdutosVendas.size(); i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelVendasProdutosVendas.get(i).getModelProdutos().getIdProduto());
            modelProdutos.setProEstoque(
                    listaModelVendasProdutosVendas.get(i).getModelProdutos().getProEstoque()
                    +
                    listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVenProQuantidade());
            listaModelProdutos.add(modelProdutos);
        }
        if(controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)){
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            if(controllerVenda.excluirVendaController(codigoVenda)){

                JOptionPane.showMessageDialog(this, "A Venda foi Excluida com sucesso ");
                this.carregarVendas();
            }else{

                JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda");
            }
        }else{
                JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda");
            }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        if(txtQuantidade.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Preenche oa campos");
        }else{
            modelProdutos = controllerProdutos.retornarProdutoController(Integer.parseInt(txtCodProduto.getText()));
            //adicionar uma linha n atabela
            DefaultTableModel modelo = (DefaultTableModel)tblProdutosVendas.getModel();
            int cont = 0;
           
            double quantidade = 0;
            quantidade = Double.parseDouble(txtQuantidade.getText());
           
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }
            modelo.addRow(new Object[]{
            modelProdutos.getIdProduto(),
            modelProdutos.getProNome(),
            txtQuantidade.getText(),
            modelProdutos.getProValor(),
            quantidade * modelProdutos.getProValor()
               
            
            });
            somarTotalProduto();
        
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void txtDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoFocusLost
        // TODO add your handling code here:
            somarTotalProduto();
 
    }//GEN-LAST:event_txtDescontoFocusLost

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        btnSalvar.setEnabled(true);
        alterarSalvar = "salvar";
        limparFormulario();
        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
    // TODO add your handling code here:
    try {

            int codigoVenda = 0,  codigoProduto = 0;
            double descondo = 0;
            listaVendasProdutoses = new ArrayList<>();
           //tratando a essesão do desconto
            if(txtDesconto.getText().equals("")){
                descondo = 0;
            }else{
                  descondo =  Double.parseDouble(txtDesconto.getText());
            }
            if(!txtNumVendas.getText().equals("")){
                modelVenda.setIdVenda(Integer.parseInt(txtNumVendas.getText()));
            }
            modelVenda.setCliente(Integer.parseInt(txtCodCliente.getText()));
            try {
                modelVenda.setVenDateVenda(blDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            } catch (Exception ex) {

            }
            modelVenda.setVenValorLiquido(Double.parseDouble(txtValorTotal.getText()));
            modelVenda.setVenValorBruto(Double.parseDouble(txtValorTotal.getText())+ descondo);
            modelVenda.setVenValorDesconto(descondo);

        if(alterarSalvar.equals("salvar")){
          //Salvar Venda
                codigoVenda = controllerVenda.salvarVendaController(modelVenda);
                if(codigoVenda > 0){
                    JOptionPane.showMessageDialog(this, "Venda Salva com sucesso ");

                }else{
                    JOptionPane.showMessageDialog(this, "ERRO ao Salva Venda");
                }
                int cont = tblProdutosVendas.getRowCount();
                for (int i = 0; i < cont; i++) {
                codigoProduto = (int) tblProdutosVendas.getValueAt(i, 0);

                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                    // produtos vendas
                    modelVendasProdutos.setProduto(codigoProduto);
                    modelVendasProdutos.setVendas(codigoVenda );
                    modelVendasProdutos.setVenProQuantidade(Integer.parseInt(tblProdutosVendas.getValueAt(i, 2).toString()));
                    modelVendasProdutos.setVenProValor((double) tblProdutosVendas.getValueAt(i, 3));
                    //produto
                    modelProdutos.setIdProduto(codigoProduto);
                    modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()- Integer.parseInt(tblProdutosVendas.getValueAt(i, 2).toString()));

                    listaVendasProdutoses.add(modelVendasProdutos);
                    listaModelProdutos.add(modelProdutos);

                }
                //salvar todos produtos da venda
                if(controllerVendasProdutos.salvarVendasProdutosController(listaVendasProdutoses)){
                    //altera estoque produtos
                    controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos);
                   // JOptionPane.showMessageDialog(this, "Produto salva com sucesso ");
                    carregarVendas();
                    limparFormulario();
                }else{
                    JOptionPane.showMessageDialog(this, "ERRO ao salva Produto");

                }
        }else if (alterarSalvar.equals("alterar")){
        //alterar
             //inicio retorna produtos  do estoque e excluir da vendas
                int linha = tblVendas.getSelectedRow();
                codigoVenda = (int) tblVendas.getValueAt(linha, 0);
                listaModelProdutos = new ArrayList<>();
                listaModelVendasProdutosVendas = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
                for (int i = 0; i < listaModelVendasProdutosVendas.size(); i++) {
                    modelProdutos = new ModelProdutos();
                    modelProdutos.setIdProduto(listaModelVendasProdutosVendas.get(i).getModelProdutos().getIdProduto());
                    modelProdutos.setProEstoque(
                            listaModelVendasProdutosVendas.get(i).getModelProdutos().getProEstoque()
                            +
                            listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVenProQuantidade());
                    listaModelProdutos.add(modelProdutos);
                }
                if(controllerProdutos.alterarEstoqueProdutoController(listaModelProdutos)){
                     if(controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)){
                       // JOptionPane.showMessageDialog(this, "A Venda foi Excluida com sucesso ");
                        this.carregarVendas();
                    }else{

                       // JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda");
                    }
                }else{
                        JOptionPane.showMessageDialog(this, "Erro ao Excluir Venda");
                }
            //fim retorna produtos  do estoque e excluir da vendas

                if(controllerVenda.atualizarVendaController(modelVenda)){
                     JOptionPane.showMessageDialog(this, "Venda alterada com sucesso ");

                }else{
                      JOptionPane.showMessageDialog(this, "ERRO ao alterada Venda ");

                }
            //Adiciona produtos na lista para salvar
                int cont = tblProdutosVendas.getRowCount();
                for (int i = 0; i < cont; i++) {
                codigoProduto = (int) tblProdutosVendas.getValueAt(i, 0);
                modelVendasProdutos = new ModelVendasProdutos();
                modelProdutos = new ModelProdutos();
                    // produtos vendas
                    modelVendasProdutos.setProduto(codigoProduto);
                    modelVendasProdutos.setVendas(codigoVenda );
                    modelVendasProdutos.setVenProQuantidade(Integer.parseInt(tblProdutosVendas.getValueAt(i, 2).toString()));
                    modelVendasProdutos.setVenProValor((double) tblProdutosVendas.getValueAt(i, 3));
                    //produto
                    modelProdutos.setIdProduto(codigoProduto);
                    modelProdutos.setProEstoque(controllerProdutos.retornarProdutoController(codigoProduto).getProEstoque()- Integer.parseInt(tblProdutosVendas.getValueAt(i, 2).toString()));

                    listaVendasProdutoses.add(modelVendasProdutos);
                    listaModelProdutos.add(modelProdutos);
                }
                //Salvar produtos da venda
                if(controllerVendasProdutos.salvarVendasProdutosController(listaVendasProdutoses)){
                   // JOptionPane.showMessageDialog(this, " Vendas produtos salva com sucesso ");
                    carregarVendas();
                    limparFormulario();
                }else{
                    JOptionPane.showMessageDialog(this, "ERRO ao  Salvar endas do produtos ");
                }
   }
         btnSalvar.setEnabled(false);
 
    }catch(Exception ex){
             JOptionPane.showMessageDialog(this, ex + "Preencha os campos ");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:
    //habilidadndo o batão salvar
    btnSalvar.setEnabled(true);
    //setando a vaiavel para alteraSalvar para fazaer o metodo salvar e alterar
    alterarSalvar = "alterar";
        int linha = tblVendas.getSelectedRow();
        int codigoVenda = (int) tblVendas.getValueAt(linha, 0);
        listaModelVendasProdutosVendas = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        DefaultTableModel modelo =  (DefaultTableModel) tblProdutosVendas.getModel();
        modelo.setNumRows(0);
        for (int i = 0; i < listaModelVendasProdutosVendas.size(); i++) {
           txtNumVendas.setText(String.valueOf(listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVendas()));
            modelo.addRow(new Object[]{
                listaModelVendasProdutosVendas.get(i).getModelProdutos().getIdProduto(),
                listaModelVendasProdutosVendas.get(i).getModelProdutos().getProNome(),
                listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVenProQuantidade(),
                listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVenProValor(),
                //soma valor total
                
                listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVenProQuantidade()
                +
                listaModelVendasProdutosVendas.get(i).getModelVendasProdutos().getVenProValor() -1
            });
        }
        somarTotalProduto();
        pnCadastro.setSelectedIndex(0);
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        try {
            int linha = tblProdutosVendas.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) tblProdutosVendas.getModel();
            modelo.removeRow(linha);
            somarTotalProduto();
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(this, "Escolha um item a ser Removido !");
        }
   
        
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        // TODO add your handling code here:
     
        DefaultTableModel modelo = (DefaultTableModel) this.tblVendas.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.tblVendas.setRowSorter(classificador);
        String texto = txtPesquisa.getText();
        classificador.setRowFilter(RowFilter.regexFilter(texto, 1));  
          
    }//GEN-LAST:event_btnPesquisaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVenda().setVisible(true);
            }
        });
    }
    
private void prencherProdutoComobox(){
    
    modelProdutos = controllerProdutos.retornarProdutoController(cbProduto.getSelectedItem().toString());
    txtCodProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
    
    }
private void preencherClienteComobox(){
    modelCliente = controllerCliente.getClienteController(cbCliente.getSelectedItem().toString());
     txtCodCliente.setText(String.valueOf(modelCliente.getIdCliente()));
    
    }
    //listar todos os clientes no comoBox
    private void listarClientes(){
        listaModelClientes = controllerCliente.getListaClienteController();
        cbCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            cbCliente.addItem(listaModelClientes.get(i).getCliNome());
        }
    }
    
    //lista Produtos no comoBox
    private void listaProdutos(){
        listaModelProdutos = controllerProdutos.retornaListaProdutoCotroller();
        cbProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            cbProduto.addItem(listaModelProdutos.get(i).getProNome());
        }
    
    }
    //Carregar Vendas na tabela 
    private void carregarVendas(){
       DefaultTableModel modelo = (DefaultTableModel) tblVendas.getModel();
       listaModelVendasClientes = controllerVendaCliente.getListaVendasClientesController();
       int cont = listaModelVendasClientes.size();
       modelo.setNumRows(0);
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
            listaModelVendasClientes.get(i).getModelVenda().getIdVenda(),
            listaModelVendasClientes.get(i).getModelCliente().getCliNome(),
            listaModelVendasClientes.get(i).getModelVenda().getVenValorBruto(),
            listaModelVendasClientes.get(i).getModelVenda().getVenValorDesconto(),
            listaModelVendasClientes.get(i).getModelVenda().getVenValorLiquido(),
            listaModelVendasClientes.get(i).getModelVenda().getVenDateVenda()       
            
            
        });
            
        }
    }
//desconto do produto

private void aplicarDesconto(){
    try {
       txtValorTotal.setText(String.valueOf(Double.parseDouble(txtValorTotal.getText()) - Double.parseDouble(txtDesconto.getText()))); 
    
    } catch (NumberFormatException e) {
    }
  

}    
    
 //Soma valor dos produtos   
private void somarTotalProduto(){
   
        double somar = 0, valor;
        int cont = tblProdutosVendas.getRowCount(); 
        for (int i = 0; i < cont; i++) {
             valor =  (double) tblProdutosVendas.getValueAt(i, 4);
             somar = somar + valor;
         }
        txtValorTotal.setText(String.valueOf(somar));
         aplicarDesconto();
    
   
 

}
//limpar a tabela e os campos 
private void limparFormulario(){
    txtQuantidade.setText("");
    txtValorTotal.setText("");
    txtDesconto.setText("");

    DefaultTableModel modelo = (DefaultTableModel) tblProdutosVendas.getModel();
    modelo.setNumRows(0);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private componentes.UJComboBox cbCliente;
    private componentes.UJComboBox cbProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane pnCadastro;
    private javax.swing.JTable tblProdutosVendas;
    private javax.swing.JTable tblVendas;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtCodProduto;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtNumVendas;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtValorTotal;
    // End of variables declaration//GEN-END:variables
}
